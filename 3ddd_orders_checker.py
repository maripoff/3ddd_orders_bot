import os
import asyncio
import threading
import requests
from bs4 import BeautifulSoup
from telegram import Bot
from flask import Flask

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
TOKEN = os.environ.get("TOKEN")  # —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
CHAT_ID = int(os.environ.get("CHAT_ID"))  # chat_id –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
CHECK_INTERVAL = 300  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
PORT = int(os.environ.get("PORT", 10000))  # –ø–æ—Ä—Ç –¥–ª—è Render Web Service

URLS = {
    "–í–∞–∫–∞–Ω—Å–∏–∏": "https://3ddd.ru/work/vacancies",
    "–ó–∞–∫–∞–∑—ã": "https://3ddd.ru/work/tasks",
}

# --- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ë–û–¢–ê ---
bot = Bot(token=TOKEN)
last_seen = {name: None for name in URLS}

# --- –§–£–ù–ö–¶–ò–Ø –ü–†–û–í–ï–†–ö–ò –°–ê–ô–¢–ê ---
async def check_site(name, url):
    global last_seen
    try:
        r = requests.get(url)
        soup = BeautifulSoup(r.text, "html.parser")

        item = soup.select_one(".work-list-item")
        if not item:
            return

        title = item.select_one("h3").get_text(strip=True)
        link = "https://3ddd.ru" + item.select_one("a")["href"]

        if last_seen[name] != link:
            last_seen[name] = link
            msg = f"üÜï –ù–æ–≤–æ–µ –≤ —Ä–∞–∑–¥–µ–ª–µ {name}:\n{title}\n{link}"
            await bot.send_message(chat_id=CHAT_ID, text=msg)
            print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:", msg)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ {name}: {e}")

# --- –û–°–ù–û–í–ù–û–ô –ê–°–ò–ù–•–†–û–ù–ù–´–ô –¶–ò–ö–õ ---
async def main_loop():
    await bot.send_message(chat_id=CHAT_ID, text="‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    while True:
        for name, url in URLS.items():
            await check_site(name, url)
        await asyncio.sleep(CHECK_INTERVAL)

# --- M–ò–ù–ò –í–ï–ë-–°–ï–†–í–ï–† –î–õ–Ø Render ---
app = Flask(__name__)

@app.route("/")
def index():
    return "Bot is running ‚úÖ"

def run_flask():
    app.run(host="0.0.0.0", port=PORT)

# --- –ó–ê–ü–£–°–ö ---
if __name__ == "__main__":
    # Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, —á—Ç–æ–±—ã Web Service –≤–∏–¥–µ–ª –ø–æ—Ä—Ç
    threading.Thread(target=run_flask).start()
    # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Ü–∏–∫–ª –±–æ—Ç–∞
    asyncio.run(main_loop())
