import os
import asyncio
import aiohttp
from bs4 import BeautifulSoup
from telegram import Bot, Update
from telegram.constants import ParseMode
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from flask import Flask
from threading import Thread

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
TOKEN = os.environ.get("TOKEN")
CHAT_ID = int(os.environ.get("CHAT_ID"))
CHECK_INTERVAL = 300  # –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
PORT = int(os.environ.get("PORT", 10000))

flask_app = Flask(__name__)

# --- –•—ç–Ω–¥–ª–µ—Ä—ã –∫–æ–º–∞–Ω–¥ ---
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ")

async def check_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞... üîé")
    result = await check_site()
    await update.message.reply_text(result, parse_mode=ParseMode.HTML)


# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞ ---
async def check_site():
    url = "https://3ddd.ru/3dmodels/popular"
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as resp:
                if resp.status != 200:
                    return f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∞–π—Ç—É: {resp.status}"
                html = await resp.text()

        soup = BeautifulSoup(html, "html.parser")
        titles = [el.get_text(strip=True) for el in soup.select(".title")]
        if not titles:
            return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –º–æ–¥–µ–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ"
        return "‚úÖ –ù–∞–π–¥–µ–Ω—ã –º–æ–¥–µ–ª–∏:\n" + "\n".join(titles[:5])

    except Exception as e:
        return f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}"


# --- Flask endpoint ---
@flask_app.route("/")
def index():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"


# --- –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ ---
def main():
    app_bot = ApplicationBuilder().token(TOKEN).build()

    # --- –∫–æ–º–∞–Ω–¥—ã ---
    app_bot.add_handler(CommandHandler("start", start_command))
    app_bot.add_handler(CommandHandler("check", check_command))

    # --- –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ---
    async def startup():
        bot = Bot(TOKEN)
        await bot.send_message(chat_id=CHAT_ID, text="–°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ‚úÖ")

    asyncio.run(startup())

    # --- Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ ---
    Thread(target=lambda: flask_app.run(host="0.0.0.0", port=PORT, debug=False)).start()

    # --- –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ ---
    app_bot.run_polling()


if __name__ == "__main__":
    main()

        print("‚ö†Ô∏è –í—Ç–æ—Ä–æ–π –ø—Ä–æ—Ü–µ—Å—Å –æ–±–Ω–∞—Ä—É–∂–µ–Ω, –∑–∞–≤–µ—Ä—à–∞—é—Å—å")
        sys.exit(0)

    main()
